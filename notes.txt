; Generate the schema.xml
vendor\bin\propel reverse --schema-name=attend --database-name=attend --namespace=attend "mysql:host=localhost;dbname=attend;user=attend;password=attend"
; TODO: Change the value of the phpName attribute of every table element to singular.
; TODO: Correct value of namespace attributes in database and table elements, as necessary

; Generate the schema map from schema xml
cls && vendor\bin\propel sql:build --config-dir=generated-reversed-database --schema-dir=generated-reversed-database --output-dir=generated-reversed-database --overwrite


cls && vendor\bin\propel help model:build
cls && vendor\bin\propel model:build --config-dir=generated-reversed-database --schema-dir=generated-reversed-database --output-dir=classes/Attend/Database


cls && vendor\bin\propel help convert
cls && vendor\bin\propel convert --config-dir=generated-reversed-database --output-dir=lib

**2024-04-15**
* Update Propel version in composer.json and update dependencies
* Write database schema file for Propel based on the current database.
* Write (update) the propel.json config file, which Propel uses to build database connections.  Do NOT check it into git, as it contains DB secrets.
* Generate the schema-creation SQL script:
.\vendor\bin\propel sql:build --config-dir=propel --schema-dir=propel --output-dir=propel

* Generate the Propel model classes:
.\vendor\bin\propel model:build --config-dir=propel --schema-dir=propel --output-dir=classes/flapjack/attend/database

* Convert the Propel config file propel.json into PHP files to be used by the application:
.\vendor\bin\propel convert --config-dir=propel
This will create two PHP files, config.php and loadDatabase.php, by default in the directory "generated-conf."
These files could be used directly; instead, we take them and incorporate them (tweaking slightly, such as
using variables instead of hard-coded DB values) into our own PropelEngine::connect().

**2024-04-18**
Start webpack development
```shell
$> npm init -y
$> npm i webpack webpack-cli
$> npm i jquery
$> npm i jquery-ui
$> npm i moment
$> npm i datatables.net-dt
$> npm i datatables.net-buttons
$> npm i datatables.net-select
```
